version: '3'
services:
  backend1:
    image: sensu/sensu:latest
    # command: sensu-backend start --state-dir /var/lib/sensu/sensu-backend/etcd --log-level debug
    command: sensu-backend start --etcd-listen-client-urls http://0.0.0.0:2379 --etcd-name backend1 --etcd-advertise-client-urls http://backend1:2379 --etcd-initial-cluster backend1=http://backend1:2380,backend2=http://backend2:2380,backend3=http://backend3:2380 --etcd-initial-cluster-state new --etcd-initial-advertise-peer-urls http://backend1:2380 --state-dir /var/lib/sensu/sensu-backend/etcd --etcd-listen-peer-urls http://0.0.0.0:2380 --log-level debug --debug
    environment:
    - SENSU_BACKEND_CLUSTER_ADMIN_USERNAME=admin
    - SENSU_BACKEND_CLUSTER_ADMIN_PASSWORD=password
    hostname: backend1
    depends_on:
      - db
    restart: always
    ports:
      - "12379:2379" # etcd storage client
      - "12380:2380" # etcd storage peer
      - "18080:8080" # Sensu API
      - "18081:8081" # Agent API
      - "16060:6060" # For performance profiling
      - "13000:3000" # Web UI
    volumes:
      - ./volumes/1:/var/lib/sensu/sensu-backend/etcd
      - ./volumes/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: sensu
    volumes:
      - ./volumes/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
  reverseproxy:
    image: nginx
    ports:
      - "2379:2379"
      - "2380:2380"
      - "8080:8080"
      - "8081:8081"
      - "3000:3000"
      - "80:80"
    depends_on:
      - backend1
    volumes:
      - ./volumes/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/www-sensu-assets:/data/www:ro
  backend2:
    image: sensu/sensu:latest
    command: sensu-backend start --etcd-listen-client-urls http://0.0.0.0:2379 --etcd-name backend2 --etcd-advertise-client-urls http://backend2:2379 --etcd-initial-cluster backend1=http://backend1:2380,backend2=http://backend2:2380,backend3=http://backend3:2380 --etcd-initial-cluster-state new --etcd-initial-advertise-peer-urls http://backend2:2380 --state-dir /var/lib/sensu/sensu-backend/etcd --etcd-listen-peer-urls http://0.0.0.0:2380 --log-level debug
    hostname: backend2
    restart: always
    depends_on:
      - backend1
    ports:
      - "32379:2379"
      - "32380:2380"
      - "38080:8080"
      - "38081:8081"
    volumes:
      - /opt/sensu/2:/var/lib/sensu/sensu-backend/etcd
  backend3:
    image: sensu/sensu:latest
    command: sensu-backend start --etcd-listen-client-urls http://0.0.0.0:2379 --etcd-name backend3 --etcd-advertise-client-urls http://backend3:2379 --etcd-initial-cluster backend1=http://backend1:2380,backend2=http://backend2:2380,backend3=http://backend3:2380 --etcd-initial-cluster-state new --etcd-initial-advertise-peer-urls http://backend3:2380 --state-dir /var/lib/sensu/sensu-backend/etcd --etcd-listen-peer-urls http://0.0.0.0:2380 --log-level debug
    hostname: backend3
    restart: always
    depends_on:
      - backend1
    ports:
      - "22379:2379"
      - "22380:2380"
      - "28080:8080"
      - "28081:8081"
    volumes:
    - /opt/sensu/3:/var/lib/sensu/sensu-backend/etcd
  agent1:
    image: sensu/sensu-rhel:latest
    command: sensu-agent start --backend-url ws://reverseproxy:8081 --subscriptions proxy,unix,webservers --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10 --socket-host agent1
    hostname: agent1
    restart: always
    depends_on:
      - backend1
      # - backend2
      # - backend3
    volumes:
      - ./volumes/agent-shared-scripts:/opt/sensu/plugins
      - ./volumes/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
  agent2:
    image: sensu/sensu:latest
    command: sensu-agent start --backend-url ws://reverseproxy:8081  --subscriptions unix,webservers --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10
    hostname: agent2
    restart: always
    depends_on:
      - backend1
      # - backend2
      # - backend3
    volumes:
      - ./volumes/agent-shared-scripts:/opt/sensu/plugins
      - ./volumes/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
  agent3:
   image: sensu/sensu:latest
   command: sensu-agent start --backend-url ws://reverseproxy:8081 --subscriptions unix,appservers --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10
   hostname: agent3
   restart: always
   depends_on:
     - backend1
    #  - backend2
    #  - backend3
   volumes:
     - ./volumes/agent-shared-scripts:/opt/sensu/plugins
     - ./volumes/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
  # agent4:
  #   image: sensu/sensu:latest
  #   command: sensu-agent start --backend-url ws://backend2:8081 --subscriptions schedules,rbac,roundrobin,proxy --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10
  #   hostname: agent4
  #   restart: always
  #   depends_on:
  #     - backend1
  #     - backend2
  #     - backend3
  # agent5:
  #   image: sensu/sensu:latest
  #   command: sensu-agent start --backend-url ws://backend2:8081 --subscriptions schedules,rbac,roundrobin,proxy --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10
  #   hostname: agent5
  #   restart: always
  #   depends_on:
  #     - backend1
  #     - backend2
  #     - backend3
  # agent6:
  #   image: sensu/sensu:latest
  #   command: sensu-agent start --backend-url ws://backend2:8081 --subscriptions schedules,rbac,roundrobin,proxy --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10
  #   hostname: agent6
  #   restart: always
  #   depends_on:
  #     - backend1
  #     - backend2
  #     - backend3
  # agent7:
  #   image: sensu/sensu:latest
  #   command: sensu-agent start --backend-url ws://backend2:8081 --subscriptions schedules,rbac,roundrobin,proxy --log-level warn --keepalive-interval 5 --keepalive-warning-timeout 10
  #   hostname: agent7
  #   restart: always
  #   depends_on:
  #     - backend1
  #     - backend2
  #     - backend3
#   es01:
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
#     container_name: es01
#     environment:
#       - node.name=es01
#       - discovery.type=single-node
#       - bootstrap.memory_lock=true
#       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#     volumes:
#       - ./volumes/es:/usr/share/elasticsearch/data
#     ports:
#       - 9200:9200
#     networks:
#       - elastic
#   kib01:
#     image: docker.elastic.co/kibana/kibana:7.16.3
#     container_name: kib01
#     ports:
#       - 5601:5601
#     environment:
#       ELASTICSEARCH_URL: http://es01:9200
#       ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
#     networks:
#       - elastic

# networks:
#   elastic:
#     driver: bridge
